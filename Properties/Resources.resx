<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Semver=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Semver=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="text_apply_option" >
    <value>应用</value>
  </data>
  <data name="text_vivaldi_browser" xml:space="preserve">
    <value>Vivaldi浏览器</value>
  </data>
  <data name="text_enable_vivaldi_plus" xml:space="preserve">
    <value>启用vivaldi++</value>
  </data>
  <data name="text_auto_update_vivaldi_plus" xml:space="preserve">
    <value>自动更新Vivaldi++</value>
  </data>
  <data name="text_auto_update_vivaldi" xml:space="preserve">
    <value>自动更新Vivaldi</value>
  </data>
  <data name="text_vivaldi_plus_plugin" xml:space="preserve">
    <value>Vivaldi++插件</value>
  </data>
  <data name="text_already_latest_version" xml:space="preserve">
    <value>已是最新版</value>
  </data>
  <data name="text_downloading_vivaldi_plus" xml:space="preserve">
    <value>正在下载vivaldi++</value>
  </data>
  <data name="text_downloading_vivaldi" xml:space="preserve">
    <value>正在下载vivaldi</value>
  </data>
  <data name="txt_extrating_vivaldi_installer" xml:space="preserve">
    <value>正在解压Vivaldi程序</value>
  </data>
  <data name="text_download_completed" xml:space="preserve">
    <value>下载完成</value>
  </data>
  <data name="text_update" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="text_install" xml:space="preserve">
    <value>安装</value>
  </data>
  <data name="text_update_avaliable" xml:space="preserve">
    <value>⬆️ </value>
  </data>
  <data name="text_no_update_avaliable" xml:space="preserve">
    <value>🎉已是最新版本</value>
  </data>
  <data name="text_service_not_avaliable" xml:space="preserve">
    <value>💔</value>
  </data>
  <data name="text_not_installed" xml:space="preserve">
    <value>❎未安装</value>
  </data>
  <data name="text_use_mirror_address" xml:space="preserve">
    <value>使用镜像地址</value>
  </data>
  <data name="text_proxy_settings" xml:space="preserve">
    <value>代理设置</value>
  </data>
  <data name="text_configure" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="text_language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="text_auto" xml:space="preserve">
    <value>自动</value>
  </data>
  <data name="text_chinese" xml:space="preserve">
    <value>中文</value>
  </data>
  <data name="text_english" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="text_proxy_config_title" xml:space="preserve">
    <value>代理配置</value>
  </data>
  <data name="text_enable_proxy" xml:space="preserve">
    <value>启用代理</value>
  </data>
  <data name="text_proxy_type" xml:space="preserve">
    <value>代理类型:</value>
  </data>
  <data name="text_host" xml:space="preserve">
    <value>主机:</value>
  </data>
  <data name="text_port" xml:space="preserve">
    <value>端口:</value>
  </data>
  <data name="text_username" xml:space="preserve">
    <value>用户名:</value>
  </data>
  <data name="text_password" xml:space="preserve">
    <value>密码:</value>
  </data>
  <data name="text_ok" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="text_cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="text_preparing_update" xml:space="preserve">
    <value>正在准备更新...</value>
  </data>
  <data name="text_file_exists_using" xml:space="preserve">
    <value>发现已有安装文件 ({0}MB)，使用现有文件进行安装...</value>
  </data>
  <data name="text_extracting_installer" xml:space="preserve">
    <value>正在解压安装程序...</value>
  </data>
  <data name="text_installing_to_directory" xml:space="preserve">
    <value>正在安装到目标目录...</value>
  </data>
  <data name="text_backing_up_existing" xml:space="preserve">
    <value>正在备份现有版本...</value>
  </data>
  <data name="text_copying_files" xml:space="preserve">
    <value>正在复制文件到安装目录...</value>
  </data>
  <data name="text_verifying_installation" xml:space="preserve">
    <value>正在验证安装...</value>
  </data>
  <data name="text_installation_completed" xml:space="preserve">
    <value>{0} {1} 安装完成！</value>
  </data>
  <data name="text_installation_verification_failed" xml:space="preserve">
    <value>安装验证失败，请重试。</value>
  </data>
  <data name="text_extraction_failed" xml:space="preserve">
    <value>解压安装程序失败，错误代码: {0}</value>
  </data>
  <data name="text_installation_complete_cleanup" xml:space="preserve">
    <value>安装完成，临时文件已清理。</value>
  </data>
  <data name="text_cleanup_error" xml:space="preserve">
    <value>清理临时文件时出现问题: {0}</value>
  </data>
  <data name="text_already_latest_message" xml:space="preserve">
    <value>您的vivaldi已经是最新版！</value>
  </data>
  <data name="text_preparing_download_vpp" xml:space="preserve">
    <value>正在准备下载Vivaldi++...</value>
  </data>
  <data name="text_found_existing_vpp_file" xml:space="preserve">
    <value>发现已有Vivaldi++文件 ({0}KB)，使用现有文件...</value>
  </data>
  <data name="text_installing_vpp_to_directory" xml:space="preserve">
    <value>正在安装Vivaldi++到目标目录...</value>
  </data>
  <data name="text_verifying_vpp_installation" xml:space="preserve">
    <value>正在验证Vivaldi++安装...</value>
  </data>
  <data name="text_vpp_installation_verification_failed" xml:space="preserve">
    <value>Vivaldi++安装验证失败，请重试。</value>
  </data>
  <data name="text_checking_vpp_version_consistency" xml:space="preserve">
    <value>检查Vivaldi++版本一致性...</value>
  </data>
  <data name="text_version_consistent_dll_missing" xml:space="preserve">
    <value>版本一致但version.dll不存在，正在重新下载...</value>
  </data>
  <data name="text_installing_version_dll" xml:space="preserve">
    <value>正在安装version.dll...</value>
  </data>
  <data name="text_version_dll_copied_successfully" xml:space="preserve">
    <value>version.dll已成功复制到安装目录。</value>
  </data>
  <data name="text_version_dll_copy_failed" xml:space="preserve">
    <value>version.dll复制失败，请重试。</value>
  </data>
  <data name="text_vpp_latest_and_dll_exists" xml:space="preserve">
    <value>Vivaldi++已是最新版本且version.dll存在。</value>
  </data>
  <data name="text_checking_vivaldi_update" xml:space="preserve">
    <value>正在检查Vivaldi更新...</value>
  </data>
  <data name="text_checking_vpp_update" xml:space="preserve">
    <value>正在检查Vivaldi++更新...</value>
  </data>
  <data name="text_all_updates_completed" xml:space="preserve">
    <value>所有更新已完成！</value>
  </data>
</root>